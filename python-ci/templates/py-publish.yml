# Python Publish Step template

parameters:
  workingDirectory: ''
  buildVersion: ''
  artifactFeed: ''
  artifactName: ''

steps:
# Skip checking out the repo
- checkout: none

# Download the build artifact created from the Pipeline
- download: current
  artifact: ${{ parameters.artifactName }}-${{ parameters.buildVersion }}

# Authenticate with our Azure Artifacts Feed
- task: TwineAuthenticate@1
  inputs:
    artifactFeed: 'SempraUtilities/${{ parameters.artifactFeed }}'

# Uploading artifact to Azure Artifacts
- bash: |
      echo "Creating new virtualenv"
      python3 -m venv --clear .env
      source .env/bin/activate
      echo "Installing Twine"
      python3 -m pip install twine
      echo "Uploading package with twine"
      python3 -m twine upload -r $FEED --config-file $(PYPIRC_PATH) $WORKSPACE/$ARTIFACT/*
  env:
    ARTIFACT: ${{ parameters.artifactName }}-${{ parameters.buildVersion }}
    FEED: ${{ parameters.artifactFeed }}
    WORKSPACE: $(Pipeline.Workspace)
  displayName: 'Install Twine and Upload'
  workingDirectory: ${{ parameters.WorkingDirectory }}